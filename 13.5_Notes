#JavaScript Object Notation (JSON)
#有些真正重要的事情JSON是做不到的，比如循环结构。图形不容易用JSON表示。但它较于XML更直观，在內部结构上导向更明确。
第一种dic里嵌套list of dic
import json

data = '''
{
  "name" : "Chuck",
  "phone" : {
    "type" : "intl",
    "number" : "+1 734 303 4456"
   },
   "email" : {
     "hide" : "yes"
   }
}'''

info = json.loads(data)#返回的是一种objects，以dic的格式
print('Name:', info["name"])
print('Hide:', info["email"]["hide"])

第二种list->dic
import json

data = '''
[
  { "id" : "001",
    "x" : "2",
    "name" : "Chuck"
  } ,
  { "id" : "009",
    "x" : "7",
    "name" : "Brent"
  }
]'''

info = json.loads(data)#It's not an object, it's a list.
print('User count:', len(info))

for item in info:
    print('Name', item['name'])
    print('Id', item['id'])
    print('Attribute', item['x'])

13.7-教学example code-针对于Google map API
import urllib.request, urllib.parse, urllib.error
import json
import ssl

api_key = False
# If you have a Google Places API key, enter it here
# api_key = 'AIzaSy___IDByT70'
# https://developers.google.com/maps/documentation/geocoding/intro

if api_key is False:
    api_key = 42
    serviceurl = 'http://py4e-data.dr-chuck.net/json?'
else :
    serviceurl = 'https://maps.googleapis.com/maps/api/geocode/json?'

# Ignore SSL certificate errors
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

while True:
    address = input('Enter location: ')
    if len(address) < 1: break

    parms = dict()
    parms['address'] = address
    if api_key is not False: parms['key'] = api_key
    url = serviceurl + urllib.parse.urlencode(parms)#that's a concatenation串联 URL和后面的具体地址address=Ann+Arbor%2C+MI连起来

    print('Retrieving', url)
    uh = urllib.request.urlopen(url, context=ctx)
    data = uh.read().decode()#google给我们的是UTF-8，需要解码成为Python Unicode 字符串在内部环境使用。
    print('Retrieved', len(data), 'characters')

    try:
        js = json.loads(data)
    except:
        js = None

    if not js or 'status' not in js or js['status'] != 'OK':#如果成功的话，status！=OK 是响应的一部分。所以这是一个让你知道你没有得到任何好的数据的方法
        print('==== Failure To Retrieve ====')
        print(data)
        continue

    print(json.dumps(js, indent=4))
    '''JSON dumps which is the opposite of loads which takes this array that dictionary and includes arrays and we're going to pretty print it
    JSON转储，这与加载相反，它需要这个数组，字典和包括数组，我们要漂亮地打印它以四位缩进'''

    lat = js['results'][0]['geometry']['location']['lat']
    lng = js['results'][0]['geometry']['location']['lng']
    print('lat', lat, 'lng', lng)
    location = js['results'][0]['formatted_address']
    print(location)
''''''API是对URL模式的规范，是我们应该发送的数据的语法，是我们可以期望得到的数据的语法.
API的生产者，即拥有数据、输出API和定义API的人。而消费者则是阅读API的文档，写一些代码，然后遵守API的规则的人。
https://maps.googleapis.com/maps/api/geocode/json是一个URL
加一个？后面是encode这些参数。
谷歌地图API一起工作。在过去，这个地图API是免费的，每天有2500个请求。
但现在，他们已经使它的一部分在API密钥后面，你开始使用OAuth和其他东西，但他们没有把它全部放在我们一直在使用的这个地址服务后面.'''

#Securing API Requests
